<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>true</BuildServerSideRenderer>
    <UserSecretsId>21fecde5-53de-4525-b2c3-a4fe7f01a7fd</UserSecretsId>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="6.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="6.0.0" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="6.0.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="6.0.0" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="6.0.0" />
    <PackageReference Include="MintPlayer.AspNetCore.OpenSearch" Version="1.1.1" />
    <PackageReference Include="MintPlayer.AspNetCore.SitemapXml" Version="2.0.2" />
    <PackageReference Include="MintPlayer.AspNetCore.SpaServices.Routing" Version="6.0.2" />
    <PackageReference Include="MintPlayer.AspNetCore.XsrfForSpas" Version="1.0.6" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.2.3" />
    <PackageReference Include="WebMarkupMin.AspNetCore3" Version="2.11.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Compile Remove="ClientApp\src\app\pages\tagging\**" />
    <Compile Remove="ClientApp\types\**" />
    <Compile Remove="Dtos\**" />
    <Compile Remove="Server\ViewModels\Subject\**" />
    <Content Remove="$(SpaRoot)**" />
    <Content Remove="ClientApp\src\app\pages\tagging\**" />
    <Content Remove="ClientApp\types\**" />
    <Content Remove="Dtos\**" />
    <Content Remove="Server\ViewModels\Subject\**" />
    <EmbeddedResource Remove="ClientApp\src\app\pages\tagging\**" />
    <EmbeddedResource Remove="ClientApp\types\**" />
    <EmbeddedResource Remove="Dtos\**" />
    <EmbeddedResource Remove="Server\ViewModels\Subject\**" />
    <None Remove="$(SpaRoot)**" />
    <None Remove="ClientApp\src\app\pages\tagging\**" />
    <None Remove="ClientApp\types\**" />
    <None Remove="Dtos\**" />
    <None Remove="Server\ViewModels\Subject\**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="Server\Controllers\Web\OpenSearchController.cs" />
  </ItemGroup>

  <ItemGroup>
    <Content Remove="wwwroot\favicon.ico" />
  </ItemGroup>

  <ItemGroup>
    <None Remove=".gitignore" />
    <None Remove="ClientApp\src\app\app.browser.module.ts" />
    <None Remove="ClientApp\src\app\components\social-logins\base-login.component.ts" />
    <None Remove="ClientApp\src\app\controls\autocomplete\IAutocompleteElement.ts" />
    <None Remove="ClientApp\src\app\entities\enum-item.ts" />
    <None Remove="ClientApp\src\app\entities\played-song.ts" />
    <None Remove="ClientApp\src\app\entities\point.ts" />
    <None Remove="ClientApp\src\app\entities\size.ts" />
    <None Remove="ClientApp\src\app\enums\ePlaylistPlayButton.ts" />
    <None Remove="ClientApp\src\app\enums\eRepeatMode.ts" />
    <None Remove="ClientApp\src\app\enums\eSidebarState.ts" />
    <None Remove="ClientApp\src\app\enums\eToggleButtonState.ts" />
    <None Remove="ClientApp\src\app\events\my-before-unload.event.ts" />
    <None Remove="ClientApp\src\app\events\play-button-clicked.event.ts" />
    <None Remove="ClientApp\src\app\helpers\enum.helper.ts" />
    <None Remove="ClientApp\src\app\helpers\html-link.helper.ts" />
    <None Remove="ClientApp\src\app\helpers\pwa.helper.ts" />
    <None Remove="ClientApp\src\app\helpers\slugify.helper.ts" />
    <None Remove="ClientApp\src\app\helpers\url-generator.helper.ts" />
    <None Remove="ClientApp\src\app\interfaces\has-changes.ts" />
    <None Remove="ClientApp\src\app\interfaces\song-with-medium.ts" />
    <None Remove="ClientApp\src\app\interfaces\two-factor-registration-url.ts" />
    <None Remove="ClientApp\src\app\pages\tagging\category\category-routing.module.ts" />
    <None Remove="ClientApp\src\app\pages\tagging\category\category.module.ts" />
    <None Remove="ClientApp\src\app\pages\tagging\category\create\create.component.html" />
    <None Remove="ClientApp\src\app\pages\tagging\category\create\create.component.scss" />
    <None Remove="ClientApp\src\app\pages\tagging\category\create\create.component.spec.ts" />
    <None Remove="ClientApp\src\app\pages\tagging\category\create\create.component.ts" />
    <None Remove="ClientApp\src\app\pages\tagging\category\edit\edit.component.html" />
    <None Remove="ClientApp\src\app\pages\tagging\category\edit\edit.component.scss" />
    <None Remove="ClientApp\src\app\pages\tagging\category\edit\edit.component.spec.ts" />
    <None Remove="ClientApp\src\app\pages\tagging\category\edit\edit.component.ts" />
    <None Remove="ClientApp\src\app\pages\tagging\category\list\list.component.html" />
    <None Remove="ClientApp\src\app\pages\tagging\category\list\list.component.scss" />
    <None Remove="ClientApp\src\app\pages\tagging\category\list\list.component.spec.ts" />
    <None Remove="ClientApp\src\app\pages\tagging\category\list\list.component.ts" />
    <None Remove="ClientApp\src\app\pages\tagging\category\show\show.component.html" />
    <None Remove="ClientApp\src\app\pages\tagging\category\show\show.component.scss" />
    <None Remove="ClientApp\src\app\pages\tagging\category\show\show.component.spec.ts" />
    <None Remove="ClientApp\src\app\pages\tagging\category\show\show.component.ts" />
    <None Remove="ClientApp\src\app\pages\tagging\tagging-routing.module.ts" />
    <None Remove="ClientApp\src\app\pages\tagging\tagging.module.ts" />
    <None Remove="ClientApp\src\app\pages\tagging\tag\create\create.component.html" />
    <None Remove="ClientApp\src\app\pages\tagging\tag\create\create.component.scss" />
    <None Remove="ClientApp\src\app\pages\tagging\tag\create\create.component.spec.ts" />
    <None Remove="ClientApp\src\app\pages\tagging\tag\create\create.component.ts" />
    <None Remove="ClientApp\src\app\pages\tagging\tag\edit\edit.component.html" />
    <None Remove="ClientApp\src\app\pages\tagging\tag\edit\edit.component.scss" />
    <None Remove="ClientApp\src\app\pages\tagging\tag\edit\edit.component.spec.ts" />
    <None Remove="ClientApp\src\app\pages\tagging\tag\edit\edit.component.ts" />
    <None Remove="ClientApp\src\app\pages\tagging\tag\list\list.component.html" />
    <None Remove="ClientApp\src\app\pages\tagging\tag\list\list.component.scss" />
    <None Remove="ClientApp\src\app\pages\tagging\tag\list\list.component.spec.ts" />
    <None Remove="ClientApp\src\app\pages\tagging\tag\list\list.component.ts" />
    <None Remove="ClientApp\src\app\pages\tagging\tag\show\show.component.html" />
    <None Remove="ClientApp\src\app\pages\tagging\tag\show\show.component.scss" />
    <None Remove="ClientApp\src\app\pages\tagging\tag\show\show.component.spec.ts" />
    <None Remove="ClientApp\src\app\pages\tagging\tag\show\show.component.ts" />
    <None Remove="ClientApp\src\app\pages\tagging\tag\tag-routing.module.ts" />
    <None Remove="ClientApp\src\app\pages\tagging\tag\tag.module.ts" />
    <None Remove="ClientApp\src\app\translate-loaders\translate-json-loader.ts" />
    <None Remove="ClientApp\src\styles\animations\color-transition.animation.ts" />
    <None Remove="ClientApp\src\styles\animations\slide-up-down.animation.ts" />
    <None Remove="ClientApp\tsconfig.app.json" />
    <None Remove="ClientApp\tsconfig.json" />
    <None Remove="ClientApp\tsconfig.server.json" />
    <None Remove="ClientApp\tsconfig.spec.json" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="ClientApp\tsconfig.app.json" />
    <Content Include="ClientApp\tsconfig.json" />
    <Content Include="ClientApp\tsconfig.server.json" />
    <Content Include="ClientApp\tsconfig.spec.json" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Fetcher\Genius\MintPlayer.Fetcher.Genius\MintPlayer.Fetcher.Genius.csproj" />
    <ProjectReference Include="..\MP.Data\MintPlayer.Data.csproj" />
    <ProjectReference Include="..\MP.Fetcher.Integration\MintPlayer.Fetcher.Integration.csproj" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\src\app\app.browser.module.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\social-logins\base-login.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\controls\autocomplete-element.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\entities\played-song.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\entities\enum-item.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\entities\point.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\entities\size.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\enums\ePlaylistPlaybutton.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\enums\eRepeatMode.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\enums\eSidebarState.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\enums\eToggleButtonState.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\events\my-before-unload.event.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\events\play-button-clicked.event.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\helpers\html-link.helper.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\helpers\enum.helper.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\helpers\pwa.helper.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\helpers\slugify.helper.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\helpers\url-generator.helper.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\interfaces\has-changes.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\interfaces\song-with-medium.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\interfaces\two-factor-registration-url.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\translate-loaders\translate-json-loader.ts" />
    <TypeScriptCompile Include="ClientApp\src\styles\animations\color-transition.animation.ts" />
    <TypeScriptCompile Include="ClientApp\src\styles\animations\slide-up-down.animation.ts" />
  </ItemGroup>

  <ItemGroup>
    <None Include="wwwroot\favicon.ico" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="ClientApp\src\app\providers\" />
    <Folder Include="ClientApp\src\assets\splash\" />
  </ItemGroup>
  
  <PropertyGroup>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>
  
  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <!--<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr - -  - -prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />-->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
